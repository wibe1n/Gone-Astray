using UnityEngine;using System.Collections;using System.Collections.Generic;public class Demo : MonoBehaviour{	[Range(1f, 10f)] public float m_SketchTile = 5f;	public PencilContourEffect m_PencilContourFx;	public bool m_PencilContour = false;	public GameObject m_Bg;		[Header("Internal")]	public Sketch[] m_Sketchs;		void Start ()	{		QualitySettings.antiAliasing = 8;		m_Sketchs = GameObject.FindObjectsOfType<Sketch> ();		for (int i = 0; i < m_Sketchs.Length; i++)		{			m_Sketchs[i].Initialize ();			m_Sketchs[i].SketchEnable ();		}	}	void Update ()	{		if (m_PencilContour)			m_PencilContourFx.enabled = true;		else			m_PencilContourFx.enabled = false;				for (int i = 0; i < m_Sketchs.Length; i++)		{			m_Sketchs[i].UpdateSelfParameters ();			if (m_PencilContour)				m_Sketchs[i].SetMaterialsFloat ("_OutlineWidth", 0f);  // do NOT outline if pencil contour effect enable			m_Sketchs[i].SetMaterialsFloat ("_Tile", m_SketchTile);		}	}	void OnGUI ()	{		GUI.Box (new Rect (10, 10, 180, 25), "NPR Sketch Effect Demo");		if (GUI.Button (new Rect (10, 40, 120, 25), "Toggle Sketch"))		{			if (m_Bg.activeSelf)			{				m_Bg.SetActive (false);				for (int i = 0; i < m_Sketchs.Length; i++)					m_Sketchs[i].SketchDisable ();			}			else			{				m_Bg.SetActive (true);				for (int i = 0; i < m_Sketchs.Length; i++)					m_Sketchs[i].SketchEnable ();			}		}	}}